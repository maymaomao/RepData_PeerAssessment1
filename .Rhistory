names(merged.dataset)
names(merged.dataset)<-sub("(","",names(merged.dataset))
names(merged.dataset)<-sub("(","",names(merged.dataset))
names(merged.dataset)<-sub("(","",names(merged.dataset))
names(merged.dataset)<-sub("\(","",names(merged.dataset))
names(merged.dataset)<-sub("\\(","",names(merged.dataset))
names(merged.dataset)
names(merged.dataset)<-sub("\\(\\)","",names(merged.dataset))
names(merged.dataset)
?sub
?sub
names(merged.dataset)<-sub("\\)","",names(merged.dataset))
names(merged.dataset)
names(merged.dataset)<-tolower(names(merged.dataset))
names(merged.dataset)
names(merged.dataset)<-sub("t","time",names(merged.dataset))
names(merged.dataset)
names(merged.dataset)<-sub("f","frequency",names(merged.dataset))
names(merged.dataset)
names(merged.dataset)<-sub("acc","accelerometer",names(merged.dataset))
names(merged.dataset)
?tapply
?apply
?lapply
?mapply
df1<-data.frame(id=sample(1:10),x=rnorm(10))
df2<-data.frmae(id=sample(1:10),y=rnorm(10))
df2<-data.frame(id=sample(1:10),y=rnorm(10))
join(df1,df2)
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
install.packages("plyr")
install.packages("plyr")
library(plyr)
join(df1,df2)
arrange(join(df1,df2),id)
join_all(df1,df2)
join_all(list(df1,df2))
?tapply
View(merged.dataset)
tapply(merged.dataset$subject,merged.dataset$actimeivity,mean)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
?trellis.par.set
?print.trellis()
rm(list=ls())
NEI<-readRDS(".\\NEI_data\\summarySCC_PM25.rds")
SCC<-readRDS(".\\NEI_data\\Source_Classification_Code.rds")
str(NEI)
str(SCC)
hist(NEI$year,sum(NEI$Emissions))
hist(NEI$year,NEI$Emissions)
str(N)
str(NEI)
nei<-transform(NEI,factor(year))
boxplot(Emissions~year,nei,xlab="year",ylab="emissions")
library(dataset)
str(nei)
boxplot(log(Emissions)~year,nei,xlab="year",ylab="emissions")
color()
?color
?colors
colors()
str(NEI)
head(NEI)
View(nei)
rm("nei")
tapply(NEI$Emissions,NEI$year,mean)
tapply(NEI$Emissions,NEI$year,sum)
str(tapply(NEI$Emissions,NEI$year,sum))
q1<-tapply(NEI$Emissions,NEI$year,sum)
q11<-as.dataframe(q1)
?as.data.frame
q11<-as.data,frame(q1)
q11<-as.data.frame(q1)
q11
str(q11)
rm("q11")
str(q1)
tapply(NEI$Emissions,NEI$year,sum)
?tapply
tapply(NEI$Emissions,NEI$year,sum,simplify = F)
q1<-tapply(NEI$Emissions,NEI$year,sum,simplify = F)
as.data.frame(q1)
str(q1)
total_emissions_eachyear<-tapply(NEI$Emissions,NEI$year,sum,simplify = F)
year<-c("1999","2002","2005","2008")
cbind(year,total_emissions_eachyear)
with(total_emissions,plot(year,total_emissions_eachyear))
total_emissions<-cbind(year,total_emissions_eachyear)
with(total_emissions,plot(year,total_emissions_eachyear))
with(total_emissions,plot(year,log(total_emissions_eachyear))
)
str(total_emissions)
with(total_emissions,plot(year,log(total_emissions_eachyear)))
?plot
with(total_emissions,lines(year,total_emissions_eachyear))
Baltimore_NEI<-NEI[(NEI$fips=="24510"),]
str(Baltimore_NEI)
total_emissions_eachyear<-tapply(Baltimore_NEI$Emissions,Baltimore_NEI$year,sum,simplify = F)
year<-c("1999","2002","2005","2008")
total_emissions<-cbind(year,total_emissions_eachyear)
with(total_emissions,lines(year,total_emissions_eachyear))
total_emissions_eachyear<-tapply(NEI$Emissions,NEI$year,sum,simplify = F)
year<-c("1999","2002","2005","2008")
total_emissions<-cbind(year,total_emissions_eachyear)
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,lines(year,total_emissions_eachyear))
dev.off()
rm(list=ls())
NEI<-readRDS(".\\NEI_data\\summarySCC_PM25.rds")
#
total_emissions_eachyear<-tapply(NEI$Emissions,NEI$year,sum,simplify = F)
year<-c("1999","2002","2005","2008")
total_emissions<-cbind(year,total_emissions_eachyear)
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,lines(year,total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,lines(year,total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,lines(year,total_emissions_eachyear))
dev.off()
?lines
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,total_emissions_eachyear),
lines(year,total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,total_emissions_eachyear))
lines(year,total_emissions_eachyear)
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,log(total_emissions_eachyear))
lines(year,log(total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,log(total_emissions_eachyear)))
lines(year,log(total_emissions_eachyear))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,log(as.numeric(total_emissions_eachyear))))
lines(year,log(as.numeric(total_emissions_eachyear)))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,log(as.numeric(total_emissions_eachyear)),
ylab="Total Emissions of Eachyear"))
lines(year,log(as.numeric(total_emissions_eachyear)))
dev.off()
png(filename = "plot1.png",
width = 480, height = 480, units = "px")
with(total_emissions,plot(year,log(as.numeric(total_emissions_eachyear)),
ylab="Total Emissions of Eachyear",
xlab="Year"))
lines(year,log(as.numeric(total_emissions_eachyear)),lty=2)
dev.off()
library(ggplot2)
?tappl
?tapply
?groupby
?group
activity<-read.csv(".\\repdata-data-activity\\activity.csv")
head(activity)
str(activity)
str(activity$steps)
max(activity$steps)
min(activity$steps)
?complete.cases
complete.cases(activity$steps)
sum(complete.cases(activity$steps))
activity<-read.csv(".\\repdata-data-activity\\activity.csv",na.rm=T)
?read.csv
activity<-read.csv(".\\repdata-data-activity\\activity.csv",skip=NA)
activity<-read.csv(".\\repdata-data-activity\\activity.csv",na.strings="NA")
str(activity)
activity<-read.csv(".\\repdata-data-activity\\activity.csv",na.strings="")
activity<-read.csv(".\\repdata-data-activity\\activity.csv")
?tapply
activity<-read.csv(".\\repdata-data-activity\\activity.csv")
activity<-activity[complete.cases(activity$steps),]
str(activity)
max(activity$steps)
stepssum<-tapply(activity$steps,activity$date,sum)
stepssum
activity[activity$date==2012-10-01]
str(activity)
activity[activity$date=="2012-10-01",]
activity[activity$date=="2012-11-29",]
str(stepssum)
datesteps<-cbind(activity$date,stepssum)
names(stepssum)
datesteps<-cbind(names(stepssum),stepssum)
str(datesteps)
head(stepssum)
names(stepssum)
str(datesteps)
head(datesteps)
colnames(datesteps)
colnames(datesteps)[1]<-"date"
colnames(datesteps)
hist(datesteps$date)
as.data.frame(datesteps)
length(datesteps)
rownames(datesteps)<-c(1:length(datesteps))
rownames(datesteps)
rownames(datesteps)<-1:61
rownames(datesteps)
head(datesteps)
hist(datesteps$date)
datestepssum<-as.data.frame(datesteps)
hist(datestepssum$date)
hist(datestepssum$stepssum)
hist(as.numeric(datestepssum$stepssum)
)
?hist
View(datestepssum)
as.numeric("2012-10-01")
stepmean<-tapply(activity$steps,activity$date,mean)
stepmedian<-tapply(activity$steps,activity$date,median)
str(stepmean)
stepmean
stepmedian
activity[activity$date=="2012-10-02",]
step1002<-activity[activity$date=="2012-10-02",]
step1002$steps
datesteps
stepmean<-mean(datesteps$stepssum)
stepmean<-mean(as.numeric(datesteps$stepssum),na.rm=T)
class(datesteps)
class(datestepssum)
stepmean<-mean(as.numeric(datestepssum$stepssum),na.rm=T)
stepmean
stepmean<-mean(as.numeric(datestepssum$stepssum))
stepmean
stepmedian<-median(as.numeric(datestepssum$stepssum),na.rm=T)
stepmedian
View(datestepssum)
as.numeric(datestepssum$stepssum)
head(datestepssum)
str(activity)
max(activity$steps)
stepssum
str(stepssum)
mean(stepssum,na.rm=T)
stepmedian<-median(stepssum,na.rm=T)
stepmedian
?hist
hist(activity$steps)
hist(activity$date)
library(ggplot2)
qplot(activity$steps,color=activity$date)
qplot(datestepssum$steps,color=datestepssum$date)
View(activity)
qplot(date,data=activity,geom="bar",weight=steps)+scale_y_continuous("steps")
qplot(date,data=activity,geom="bar",weight=steps)
rm(list=ls())
```
## mean total number of steps taken per day
```{r}
```{r}
##Loading and preprocessing the data
```{r}
activity<-read.csv(".\\repdata-data-activity\\activity.csv")
activity<-activity[complete.cases(activity$steps),]
```
## mean total number of steps taken per day
```{r}
library(ggplot2)
qplot(date,data=activity,geom="bar",weight=steps)+scale_y_continuous("steps")
```
```{r}
stepssum<-tapply(activity$steps,activity$date,sum)
stepmean<-mean(stepssum,na.rm=T)
stepmedian<-median(stepssum,na.rm=T)
the mean is 'r stepmean' and median is 'r stepmedian' total number of steps taken per day .
the mean is `r stepmean` and median is `r stepmedian` total number of steps taken per day .
stepssum<-tapply(activity$steps,activity$date,sum)
stepmean<-mean(stepssum,na.rm=T)
stepmedian<-median(stepssum,na.rm=T)
```
the mean is `r stepmean` and median is `r stepmedian` total number of steps taken per day .
```{r computetime,echo=FALSE}
time<-format(Sys.time(),"%a %b %d %X %Y")
rand<-rnorm(1)
```
time is `r time`,num is `r rand`
library(ggplot2)
qplot(interval,data=activity,geom="line",weight=steps)
qplot(interval,data=activity,geom="line",weight=steps)
qplot(interval,data=activity,geom="line")
qplot(interval,steps,data=activity,geom="line",weight=steps)
qplot(interval,steps,data=activity,geom="line")
qplot(interval,steps,data=activity,geom="line",average=steps)
qplot(interval,average(steps),data=activity,geom="line")
aves <- aggregate(steps ~ year, data=activity, mean)
hist(aves$steps)
aves <- aggregate(steps ~ date, data=activity, mean)
hist(aves$steps)
sums <- aggregate(steps ~ date, data=activity, sum)
hist(aves$steps)
sums <- aggregate(steps ~ date, data=activity, sum)
View(aves)
View(sums)
hist(sums$steps)
hist(sums$date)
hist(sums$steps,xlab="steps",main="Histogram")
hist(sums$steps,xlab="steps",main="Histogram of the total number of steps taken each day")
hist(sums$steps,xlab="steps",main="The total number of steps taken each day")
hist(sums$steps,xlab="steps",main="The Total Number of Steps Taken Each Day")
aves<-aggregate(steps~interval,data=activity,mean)
qplot(interval,steps,data=activity,geom="line")
qplot(aves$interval,aves$steps,data=aves,geom="line")
str(activity)
max(activity$interval)
min(activity$interval)
str(aves)
aves[aves$steps==max(aves$steps),1]
max(aves$steps)
aves[835,]
aves[aves$interval==835,]
sum(complete.cases(activity$date))
rawactivity<-read.csv(".\\repdata-data-activity\\activity.csv")
sum(complete.cases(rawactivity$date))
sum(complete.cases(rawactivity$interval))
sum(is.na(rawactivity$interval))
sum(is.na(rawactivity$steps))
head(aves)
str(rawactivity)
aves[aves$interval==835,2]
sums <- aggregate(steps ~ date, data=activity, sum)
hist(sums$steps,xlab="steps",main="The Total Number of Steps Taken Each Day")
stepssum<-tapply(activity$steps,activity$date,sum)
stepmean<-mean(stepssum,na.rm=T)
stepmedian<-median(stepssum,na.rm=T)
library(ggplot2)
aves<-aggregate(steps~interval,data=activity,mean)
qplot(aves$interval,aves$steps,data=aves,geom="line")
library(ggplot2)
aves<-aggregate(steps~interval,data=activity,mean)
qplot(interval,steps,data=aves,geom="line")
View(aves)
names(aves)
qplot(interval,steps,data=aves,geom="line")
qplot(interval,steps,data=aves)
library(ggplot2)
aves<-aggregate(steps~interval,data=activity,mean)
str(aves)
qplot(interval,steps,data=aves,geom="line")
qplot(interval,steps,data=aves)
qplot(steps,interval,data=aves)
head(sums)
mean(sums$steps)
median(sums$steps)
aggregate(steps ~ date, data=rawactivity, sum)
?vector
weekd<-vector()
for (i in 1:17568){
temp<-wekdy(imputacty[i,2])
weekd[i,1]<-paste(weekd,temp)
}
wekdy<-function(dt){
wk<-weekdays(as.Date(dt))
if((wk=="星期六")){
wk<-"weekend"
wk
}
else{
wk<-"weekday"
wk
}
}
for (i in 1:17568){
temp<-wekdy(imputacty[i,2])
weekd[i,1]<-paste(weekd,temp)
}
imputacty<-activity
for (i in 1:17568){
if (is.na(imputacty[i,1])){
imputacty[i,1]=imputvalue(imputacty[i,3])
}
}
imputvalue<-function(inter){
aves[aves$interval==inter,2]
}
imputacty<-activity
for (i in 1:17568){
if (is.na(imputacty[i,1])){
imputacty[i,1]=imputvalue(imputacty[i,3])
}
}
rm(list=ls())
activity<-read.csv(".\\repdata-data-activity\\activity.csv")
imputvalue<-function(inter){
aves[aves$interval==inter,2]
}
imputacty<-activity
for (i in 1:17568){
if (is.na(imputacty[i,1])){
imputacty[i,1]=imputvalue(imputacty[i,3])
}
}
aves<-aggregate(steps~interval,data=activity,mean)
for (i in 1:17568){
if (is.na(imputacty[i,1])){
imputacty[i,1]=imputvalue(imputacty[i,3])
}
}
wekdy<-function(dt){
wk<-weekdays(as.Date(dt))
if((wk=="星期六")){
wk<-"weekend"
wk
}
else{
wk<-"weekday"
wk
}
}
weekd<-vector()
for (i in 1:17568){
temp<-wekdy(imputacty[i,2])
weekd[i,1]<-paste(weekd,temp)
}
for (i in 1:17568){
temp<-wekdy(imputacty[i,2])
weekd[i,1]<-temp
}
weekd<-vector()
for (i in 1:17568){
temp<-wekdy(imputacty[i,2])
weekd<-rbind(weekd,temp)
}
str(weekd)
factor(weekd)
cbind(imputacty,factor(weekd))
imputactyadd1<-cbind(imputacty,factor(weekd))
str(imputactyadd1)
str(aves)
str(imputactyadd1)
names(imputactyadd1)
names(imputactyadd1)[4]<-"weekd"
names(imputactyadd1)
par(mfcol=c(1,2))
plot(imputactyadd1$interval,imputactyadd1$steps,type="n",xlab="interval",ylab="steps")
imputweekday<-imputactyadd1[imputactyadd1$weekd=="weekday",]
avesweekday<-aggregate(steps~interval,data=imputweekday,mean)
lines(avesweekday$interval,avesweekday$steps)
imputweekend<-imputactyadd1[imputactyadd1$weekd=="weekend",]
avesweekend<-aggregate(steps~interval,data=imputweekend,mean)
lines(avesweekend$interval,avesweekend$steps)
par(mfcol=c(1,2))
plot(imputactyadd1$interval,imputactyadd1$steps,type="n",xlab="interval",ylab="steps")
imputweekday<-imputactyadd1[imputactyadd1$weekd=="weekday",]
avesweekday<-aggregate(steps~interval,data=imputweekday,mean)
lines(avesweekday$interval,avesweekday$steps)
imputweekend<-imputactyadd1[imputactyadd1$weekd=="weekend",]
avesweekend<-aggregate(steps~interval,data=imputweekend,mean)
lines(avesweekend$interval,avesweekend$steps)
par(mfcol=c(1,2))
plot(imputactyadd1$interval,imputactyadd1$steps,type="n",xlab="interval",ylab="steps")
imputweekday<-imputactyadd1[imputactyadd1$weekd=="weekday",]
avesweekday<-aggregate(steps~interval,data=imputweekday,mean)
lines(avesweekday$interval,avesweekday$steps)
plot(imputactyadd1$interval,imputactyadd1$steps,type="n",xlab="interval",ylab="steps")
imputweekend<-imputactyadd1[imputactyadd1$weekd=="weekend",]
avesweekend<-aggregate(steps~interval,data=imputweekend,mean)
lines(avesweekend$interval,avesweekend$steps)
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
setwd(".\\RepData_PeerAssessment1")
rm(list=ls())
activity<-read.csv("..\\repdata-data-activity\\activity.csv")
rm(list=ls())
x<-rnorm(100,1100,75)
?percentile
??percentile
getwd()
